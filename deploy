#!/bin/bash
set -euo pipefail
set -x

cd "$(dirname "$0")"
export TF_VAR_hetzner_token="$(gopass spaceapi/hetzner_cloud_token)"

function autoDeploy {
    createPersistent

    read -p "Test changes in dev? " -n 1 -r
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        createAndProvisionDev

        read -p "Dev deployed, press enter to destroy. Ctrl + C to cancel."
        destroyDev
    fi

    read -p "Press enter to deploy to prod. Ctrl + C to cancel."
    createAndProvisionProd
}

function createAndProvisionEnv {
    local env=$1
    local domain=$2

    cd nodes
    terraform init
    terraform workspace select ${env}
    terraform apply -var-file=${env}.tfvars

    cd ../deployment
    env=${env} /usr/bin/env ansible-playbook -i inventory.sh playbooks/provisioning.yml --vault-password-file vaultpass --extra-vars "domain=$domain"
    cd ..
}

function createPersistent {
    cd persistent
    terraform init
    terraform apply
    cd ..
}

function createAndProvisionProd {
    createAndProvisionEnv prod spaceapi.io
}

function createAndProvisionDev {
    createAndProvisionEnv dev spaceapi.rocks
}

function destroyDev {
    # cleanup dev
    cd nodes
    terraform destroy -auto-approve -var-file=dev.tfvars
    cd ..
}

case ${1-} in
    destroydev) destroyDev; exit ;;
    deploydev) createAndProvisionDev; exit ;;
    *) autoDeploy; exit ;;
esac
